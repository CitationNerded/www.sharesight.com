name: Run Tests and/or Deploy to S3

on:
  pull_request:
    branches:
      - master
  push:
    branches:
    - master
    - develop
    - github-actions-ci-cd
  schedule:
    - cron: 0 */8 * * * # every 8 hours

jobs:
  build:
    runs-on: ubuntu-latest

    # -------- Github Checkout
    steps:
    - uses: actions/checkout@master


    # ------- Calculated Values
    - name: Set Calculated Environment Output
      id: calculated # access this with steps.calculated.outputs.[name]
      # NOTE: Cannot use these inside of the same step, only in subsequent steps.
      # This is why we compare against refs/heads/… directly instead of branch_name.
      #
      # app_env = production|staging
      # should_deploy = true|false
      # should_test = true|false
      # branch_name = master|develop|branch-name (removes "refs/heads/" from "refs/heads/…")
      run: |
        echo ::set-output name=app_env::$("${{ github.ref }}" == "refs/heads/master" && echo "production" || echo "staging")
        echo ::set-output name=should_test::$("${{ github.event_name }}" != "pull_request" && "${{ github.ref }}" == "refs/heads/develop" && echo "false" || echo "true")
        echo ::set-output name=should_deploy::$("${{ github.event_name }}" != "pull_request" && ("${{ github.ref }}" == "refs/heads/master" || "${{ github.ref }}" == "refs/heads/develop") && echo "true" || echo "false")
        echo ::set-output name=branch_name::$(echo "${{ github.ref }}" | sed "s/^refs\/heads\/\(.*\)$/\1/")
    - name: List Calculated environment
      run: |
        echo app_env=${{ steps.calculated.outputs.app_env }}
        echo should_test=${{ steps.calculated.outputs.should_test }}
        echo should_deploy=${{ steps.calculated.outputs.should_deploy }}
        echo branch_name=${{ steps.calculated.outputs.branch_name }}


    # -------- Ruby & Dependencies
    - name: Install Ruby
      uses: actions/setup-ruby@v1
      with:
        ruby-version: "2.4.x"
    - run: gem install bundler
    - run: bundle install --jobs 4 --retry 3


    # -------- JS & Dependencies
    - name: Install Node
      uses: actions/setup-node@v1
      with:
        node-version: "10.x"
    - run: yarn install --frozen-lockfile --non-interactive


    # -------- Build Static Files
    - name: Download Data from Contentful
      run: bundle exec middleman contentful
      env:
        APP_ENV: ${{ steps.calculated.outputs.app_env }}
        CONTENTFUL_BLOG_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_BLOG_ACCESS_TOKEN }}
        CONTENTFUL_BLOG_PREVIEW_TOKEN: ${{ secrets.CONTENTFUL_BLOG_PREVIEW_TOKEN }}
        CONTENTFUL_PARTNERS_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_PARTNERS_ACCESS_TOKEN }}
        CONTENTFUL_PARTNERS_PREVIEW_TOKEN: ${{ secrets.CONTENTFUL_PARTNERS_PREVIEW_TOKEN }}
        CONTENTFUL_LANDING_PAGES_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_LANDING_PAGES_ACCESS_TOKEN }}
        CONTENTFUL_LANDING_PAGES_PREVIEW_TOKEN: ${{ secrets.CONTENTFUL_LANDING_PAGES_PREVIEW_TOKEN }}
    - run: bundle exec middleman build --verbose


    # -------- Run Tests
    - name: jest tests
      if: steps.calculated.outputs.should_test == "true"
      run: yarn run jest --runInBand
    - name: rspec tests
      if: steps.calculated.outputs.should_test == "true"
      run: bundle exec rspec spec -p --format d
    - name: bundle audit
      if: steps.calculated.outputs.should_test == "true"
      run: |
        bundle exec bundle-audit update
        bundle exec bundle-audit check --ignore CVE-2014-10077


    # -------- Deploy to S3 + Bugsnag Release
    - name: Deploy to S3
      if: success() && steps.calculated.outputs.should_deploy == "true"
      run: bundle exec middleman s3_sync
      env:
        AWS_DEPLOY_ACCESS_ID: ${{ secrets.AWS_DEPLOY_ACCESS_ID }}
        AWS_DEPLOY_SECRET_KEY: ${{ secrets.AWS_DEPLOY_SECRET_KEY }}
    - name: Notify Bugsnag of Release
      if: success() && steps.calculated.outputs.should_deploy == "true"
      uses: wei/curl@v1
      with:
        args: -d "apiKey=${{ secrets.BUGSNAG_API_KEY }}&releaseStage=${{ steps.calculated.outputs.app_env }}&repository=${{ github.repository }}&branch=${{ steps.calculated.outputs.branch_name }}&revision=${{ github.sha }}" https://notify.bugsnag.com/deploy)
        

    # -------- Slack Notification
    - name: Slack Notification
      uses: homoluctus/slatify@master
      if: always()
      with:
        type: ${{ job.status }}
        job_name: "Github Actions test=${{ steps.calculated.outputs.should_test }} deploy=${{ steps.calculated.outputs.should_deploy }}"
        mention: "here"
        mention_if: "failure"
        channel: "#static_site_builds"
        url: ${{ secrets.SLACK_WEBHOOK_URL }}
