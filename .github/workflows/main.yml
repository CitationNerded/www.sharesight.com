name: Run Tests and/or Deploy to S3

on:
  pull_request:
    branches:
      - master
  push:
    branches:
    # NOTE: ANY branches listed here will be deployed to due to `should_deploy` logic.
    # - master # TODO: Enable when merging into master.
    - develop
  # schedule:
    # This will be ran against [default branch = master]
    # TODO: Enable when merging into master.
    # - cron: 0 */8 * * * # every 8 hours

jobs:
  build:
    runs-on: ubuntu-latest

    # -------- Github Checkout
    steps:
    - uses: actions/checkout@master


    # ------- Calculated Values
    - name: Set Calculated Environment Output
      id: calculated # access this with steps.calculated.outputs.[name]
      run: |
        echo ::set-output name=app_env::$([ '${{ github.ref }}' == 'refs/heads/master' ] && echo 'production' || echo 'staging')
        echo ::set-output name=should_test::$([ '${{ github.event_name }}' == 'push' ] && [ '${{ github.ref }}' != 'refs/heads/master' ] && echo 'false' || echo 'true')
        echo ::set-output name=should_deploy::$([ '${{ github.event_name }}' != 'pull_request' ] && ( [ '${{ github.ref }}' == 'refs/heads/master' ] || [ '${{ github.ref }}' == 'refs/heads/develop' ] ) && echo 'true' || echo 'false')
        echo ::set-output name=bugsnag_branch::$(echo '${{ github.ref }}' | sed 's/^refs\/heads\/\(.*\)$/\1/')
    - name: List Calculated environment
      # app_env = production|staging
      # should_test = true|false # doesn't test pushes into develop
      # should_deploy = true|false # deploys unless event==pull_request
      # bugsnag_branch = master|develop or refs/pulls/123/merge (something unintelligble to Bugsnag)
      run: |
        echo app_env=${{ steps.calculated.outputs.app_env }}
        echo should_test=${{ steps.calculated.outputs.should_test }}
        echo should_deploy=${{ steps.calculated.outputs.should_deploy }}
        echo bugsnag_branch=${{ steps.calculated.outputs.bugsnag_branch }}


    # -------- Ruby & Dependencies
    - name: Install Ruby
      uses: actions/setup-ruby@v1
      with:
        ruby-version: '2.4.x'
    - run: gem install bundler
    - run: bundle install --jobs 4 --retry 3


    # -------- JS & Dependencies
    - name: Install Node
      uses: actions/setup-node@v1
      with:
        node-version: '10.x'
    - run: yarn install --frozen-lockfile --non-interactive


    # -------- Build Static Files
    - name: Download Data from Contentful
      run: bundle exec middleman contentful
      env:
        APP_ENV: ${{ steps.calculated.outputs.app_env }}
        CONTENTFUL_BLOG_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_BLOG_ACCESS_TOKEN }}
        CONTENTFUL_BLOG_PREVIEW_TOKEN: ${{ secrets.CONTENTFUL_BLOG_PREVIEW_TOKEN }}
        CONTENTFUL_PARTNERS_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_PARTNERS_ACCESS_TOKEN }}
        CONTENTFUL_PARTNERS_PREVIEW_TOKEN: ${{ secrets.CONTENTFUL_PARTNERS_PREVIEW_TOKEN }}
        CONTENTFUL_LANDING_PAGES_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_LANDING_PAGES_ACCESS_TOKEN }}
        CONTENTFUL_LANDING_PAGES_PREVIEW_TOKEN: ${{ secrets.CONTENTFUL_LANDING_PAGES_PREVIEW_TOKEN }}
    - run: bundle exec middleman build --verbose
      env:
        APP_ENV: ${{ steps.calculated.outputs.app_env }}


    # -------- Run Tests
    - name: jest tests
      if: steps.calculated.outputs.should_test == 'true'
      run: yarn run jest --runInBand
    - name: rspec tests
      if: steps.calculated.outputs.should_test == 'true'
      run: bundle exec rspec spec -p --format d
    - name: bundle audit
      if: steps.calculated.outputs.should_test == 'true'
      run: |
        bundle exec bundle-audit update
        bundle exec bundle-audit check --ignore CVE-2014-10077


    # -------- Deploy to S3 + Bugsnag Release
    - name: Deploy to S3
      if: success() && steps.calculated.outputs.should_deploy == 'true'
      run: bundle exec middleman s3_sync
      env:
        APP_ENV: ${{ steps.calculated.outputs.app_env }}
        AWS_DEPLOY_ACCESS_ID: ${{ secrets.AWS_DEPLOY_ACCESS_ID }}
        AWS_DEPLOY_SECRET_KEY: ${{ secrets.AWS_DEPLOY_SECRET_KEY }}
    - name: Notify Bugsnag of Release
      if: success() && steps.calculated.outputs.should_deploy == 'true'
      uses: wei/curl@v1
      with:
        args: https://notify.bugsnag.com/deploy -d "apiKey=${{ secrets.BUGSNAG_API_KEY }}&releaseStage=${{ steps.calculated.outputs.app_env }}&repository=${{ github.repository }}&branch=${{ steps.calculated.outputs.bugsnag_branch }}&revision=${{ github.sha }}"


    # -------- Slack Notification
    - name: Slack Notification
      uses: homoluctus/slatify@master
      if: always()
      with:
        type: ${{ job.status }}
        job_name: "Github Actions test=${{ steps.calculated.outputs.should_test }} deploy=${{ steps.calculated.outputs.should_deploy }}"
        mention: 'here'
        mention_if: 'failure'
        channel: '#static_site_builds'
        url: ${{ secrets.SLACK_WEBHOOK_URL }}
